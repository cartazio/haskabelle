(*  ID:         $Id$
    Author:     Florian Haftmann, TU Muenchen
*)

classes
  "Prelude.Show"        "Prelude.print"
    parameter "Prelude.show"    "a -> String"
  "Prelude.Eq"          "Prelude.eq"
    parameter "Prelude.(==)"    "a -> a -> bool"
    parameter "Prelude.(/=)"    "a -> a -> bool"
  "Prelude.Num"         "Prelude.num"

types
  "Prelude.Char"	"char"
  "Prelude.String"	"string"
  "Prelude.Bool"        "bool"
  "Prelude.PairTyCon"   "*"
  "Prelude.ListTyCon"   "list"
  "Prelude.Maybe"       "option"

  "Prelude.Int"         "int"
  "Prelude.Integer"     "int"

  "Prelude.UnitTyCon" 	"unit"

consts
  "Prelude.show"        "Prelude.print"

  "Prelude.id"          "id"
  "Prelude.(.)"         "Fun.comp"

  "Prelude.True"        "True"
  "Prelude.False"       "False"

  "Prelude.not"         "Not"
  "Prelude.(&&)"        "op &"
  "Prelude.(||)"        "op |"

  "Prelude.PairDataCon" "Pair"

  "Prelude.fst"         "fst"
  "Prelude.snd"         "snd"

  "Prelude.([])"        "List.Nil"
  "Prelude.(:)"         "List.Cons"
  "Prelude.(!!)"        "List.nth"
  
  "Prelude.null"	"List.null"
  "Prelude.zip"		"List.zip"
  "Prelude.head"        "List.hd"
  "Prelude.tail"        "List.tl"
  "Prelude.map"         "List.map"
  "Prelude.(++)"        "List.append"
  "Prelude.reverse"     "List.rev"
  "Prelude.elem"        "List.member"
  "Prelude.concat"      "List.concat"
  "Prelude.any"         "List.list_ex"
  "Prelude.all"         "List.list_all"
  "Prelude.filter"      "List.filter"
  "Prelude.length"      "List.length"
  "Prelude.foldl"       "List.foldl"
  "Prelude.and"		"Prelude.list_and"
  "Prelude.foldr"       "Prelude.hsk_foldr"
  "Prelude.zipWith"     "Prelude.zipWith"

  "Prelude.Nothing"     "None"
  "Prelude.Just"        "Some"

  "Prelude.(+)"         "HOL.plus"
  "Prelude.(*)"         "HOL.times"
  "Prelude.negate"      "HOL.uminus"
  "Prelude.(-)"         "HOL.minus"
  "Prelude.(<)"         "HOL.less"
  "Prelude.(<=)"        "HOL.less_eq"
  "Prelude.(>)"         "HOL.greater"
  "Prelude.(>=)"        "HOL.greater_eq"
  "Prelude.(==)"        "Prelude.heq"
  "Prelude.(/=)"        "Prelude.hneq"
  "Prelude.abs"         "HOL.abs"
  "Prelude.sgn"         "HOL.sgn"
  "Prelude.fromInteger" "Int.of_int"

  "Prelude._|_"         "HOL.undefined"

  "Prelude.($)"		"Prelude.fun_app"
