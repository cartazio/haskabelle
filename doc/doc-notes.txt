
* Motivation behind Haskabelle

    Isar/HOL can be regarded as a combination of a functional programming
    language and logic. It's based on the typed lambda calculus.

       ;;; FIXME: lambda calculus + statements ("fun" etc) + syntactic sugar ("case")

    Haskell is a functional programming language that has succeeded in getting
    more and more momentum, not only in academia but increasingly also in
    industry. It is used for all kind of programming tasks despite (or, perhaps,
    rather because) of its pureness, that is its complete lack of side-effects.

       ;;; FIXME: Isar/HOL feels pretty much like a subset of Haskell,
                  so converting from to the other feels kinda natural.

       ;;; FIXME: Purpose of Haskabelle: Making it easier to verify
                  Haskell programs.




* How does Haskabelle work?

     - working on ASTs only => no type inference

     - delegating work to Isabelle

     - only because a conversion succeeded, does not mean that Isabelle won't choke.


* What can we do?

    - module resolution

    - declarations

           + functions

           + constants

           + algebraic data types

           + classes & instances

           + monads

    - linearization of declarations

    - expressions

           + literals (integers, strings, characters)

           + applications, infix applications, sections

           + lambda abstractions

           + if, let, case

           + pattern guards

           + list comprehensions

           + records

* Customization

   ???

* Implementation Notes

    5 Phases

      - parsing

      - preprocessing

      - converting

      - adapting

      - printing


